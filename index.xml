<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>渣渣的夏天</title>
        <link>https://zz2summer.github.io/</link>
        <description>渣渣的夏天的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>summer2zz@163.com (渣渣的夏天)</managingEditor>
            <webMaster>summer2zz@163.com (渣渣的夏天)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 05 Mar 2022 22:37:23 &#43;0800</lastBuildDate>
            <atom:link href="https://zz2summer.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>LeetCode 之 剑指 Offer 11. 旋转数组的最小数字（Java）</title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-11.-%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97java/</link>
    <pubDate>Sat, 05 Mar 2022 22:37:23 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-11.-%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97java/</guid>
    <description><![CDATA[<p>剑指 Offer 11. 旋转数组的最小数字，把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。给你一个可能存在 重复 元素值的数组 numbers ，它原来是一个升序排列的数组，并按上述情形进行了一次旋转。请返回旋转数组的最小元素。例如，数组 [3,4,5,1,2] 为 [1,2,3,4,5] 的一次旋转，该数组的最小值为1。</p>]]></description>
</item><item>
    <title>LeetCode 之 剑指 Offer 10  II. 青蛙跳台阶问题（Java）</title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-10-ii.-%E9%9D%92%E8%9B%99%E8%B7%B3%E5%8F%B0%E9%98%B6%E9%97%AE%E9%A2%98java/</link>
    <pubDate>Sat, 05 Mar 2022 22:37:21 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-10-ii.-%E9%9D%92%E8%9B%99%E8%B7%B3%E5%8F%B0%E9%98%B6%E9%97%AE%E9%A2%98java/</guid>
    <description><![CDATA[<p>LeetCode 之 剑指 Offer 10- II. 青蛙跳台阶问题（Java），一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。利用函数思维转换为斐波那契数列问题，再采用递归或者记忆化数组解决。</p>]]></description>
</item><item>
    <title>LeetCode 之 剑指 Offer 10  I. 斐波那契数列（Java）</title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-10-i.-%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97java/</link>
    <pubDate>Sat, 05 Mar 2022 22:37:20 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-10-i.-%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97java/</guid>
    <description><![CDATA[<p>LeetCode 之 剑指 Offer 10- I. 斐波那契数列（Java），写一个函数，输入 n ，求斐波那契（Fibonacci）数列的第 n 项。最直接的方法当然是用递归，但是递归耗时过多，不适用，本文结合相关题解提供一个记忆化数组的方法进行解决。</p>]]></description>
</item><item>
    <title>LeetCode 之 剑指 Offer 09. 用两个栈实现队列（Java）</title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-09.-%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97java/</link>
    <pubDate>Sat, 05 Mar 2022 22:37:19 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-09.-%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97java/</guid>
    <description><![CDATA[<p>LeetCode 之 剑指 Offer 09. 用两个栈实现队列（Java），用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -1。本文讲解实现思路和提供代码参考。</p>]]></description>
</item><item>
    <title>LeetCode 之 剑指 Offer 07. 重建二叉树（Java）</title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-07.-%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91java/</link>
    <pubDate>Sat, 05 Mar 2022 22:37:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-07.-%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91java/</guid>
    <description><![CDATA[<p>LeetCode 之 剑指 Offer 07. 重建二叉树（Java），输入某二叉树的前序遍历和中序遍历的结果，请重建该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。本文简单描述解题思路，如何重新划分前序遍历和中序遍历的二叉树根节点、左右子树，并提供实现代码。</p>]]></description>
</item><item>
    <title>LeetCode 之 剑指 Offer 06. 从尾到头打印链表（Java）</title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-06.-%E4%BB%8E%E5%B0%BE%E5%88%B0%E5%A4%B4%E6%89%93%E5%8D%B0%E9%93%BE%E8%A1%A8java/</link>
    <pubDate>Sat, 05 Mar 2022 22:35:56 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-06.-%E4%BB%8E%E5%B0%BE%E5%88%B0%E5%A4%B4%E6%89%93%E5%8D%B0%E9%93%BE%E8%A1%A8java/</guid>
    <description><![CDATA[<p>LeetCode 之 剑指 Offer 06. 从尾到头打印链表（Java），输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。本文主要分析解题思路并提供三种解法，分别是——1. &ldquo;栈&rdquo; + Stack，2. &ldquo;栈&rdquo; + ArrayList，3. 递归 + ArrayList。</p>]]></description>
</item><item>
    <title>LeetCode 之 剑指 Offer 05. 替换空格（Java）</title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-05.-%E6%9B%BF%E6%8D%A2%E7%A9%BA%E6%A0%BCjava/</link>
    <pubDate>Sat, 05 Mar 2022 22:34:13 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-05.-%E6%9B%BF%E6%8D%A2%E7%A9%BA%E6%A0%BCjava/</guid>
    <description><![CDATA[<p>LeetCode 之 剑指 Offer 05. 替换空格（Java），请实现一个函数，把字符串 s 中的每个空格替换成&quot;%20&quot;。解题思路：创建一个返回字符串，然后遍历原字符串利用字符串函数拼接或者替换后拼接即可。</p>]]></description>
</item><item>
    <title>LeetCode 之 剑指 Offer 04. 二维数组中的查找（Java）</title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-04.-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BEjava/</link>
    <pubDate>Sat, 05 Mar 2022 22:30:41 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-04.-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BEjava/</guid>
    <description><![CDATA[<p>LeetCode 之 剑指 Offer 04. 二维数组中的查找（Java），在一个 n * m 的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个高效的函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。本文简要分析解题思路，提供暴力遍历和规律性删减法。</p>]]></description>
</item><item>
    <title>LeetCode 之 剑指 Offer 03. 数组中重复的数字（Java）</title>
    <link>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-03.-%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97java/</link>
    <pubDate>Sat, 05 Mar 2022 22:25:42 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/leetcode-%E4%B9%8B-%E5%89%91%E6%8C%87-offer-03.-%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97java/</guid>
    <description><![CDATA[<p>LeetCode 之 剑指 Offer 03. 数组中重复的数字（Java），在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。创建重复数组进行遍历判断。</p>]]></description>
</item><item>
    <title>Linux下杀毒软件clamav0.104.2离线安装及测试（CentOS7）</title>
    <link>https://zz2summer.github.io/linux%E4%B8%8B%E6%9D%80%E6%AF%92%E8%BD%AF%E4%BB%B6clamav%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E5%8F%8A%E6%B5%8B%E8%AF%95centos7/</link>
    <pubDate>Sat, 05 Mar 2022 21:03:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://zz2summer.github.io/linux%E4%B8%8B%E6%9D%80%E6%AF%92%E8%BD%AF%E4%BB%B6clamav%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E5%8F%8A%E6%B5%8B%E8%AF%95centos7/</guid>
    <description><![CDATA[<p>本文主要是讲解如何在 Linux 环境下离线安装以及测试杀毒软件 clamav 0.104.2（以CentOS7为例），包括下载安装、配置参数和运行。</p>]]></description>
</item></channel>
</rss>
